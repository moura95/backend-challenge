basePath: /api
definitions:
  github_com_moura95_backend-challenge_internal_application_usecases_auth.SignInRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  github_com_moura95_backend-challenge_internal_application_usecases_auth.SignUpRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  github_com_moura95_backend-challenge_internal_domain_user.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response:
    properties:
      data: {}
      error: {}
    type: object
  internal_interfaces_http_handlers.AuthResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/github_com_moura95_backend-challenge_internal_domain_user.UserResponse'
    type: object
  internal_interfaces_http_handlers.ListUsersResponse:
    properties:
      page:
        type: integer
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/github_com_moura95_backend-challenge_internal_domain_user.UserResponse'
        type: array
    type: object
  internal_interfaces_http_handlers.UpdateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API RESTful completa para gestão de usuários com Clean Architecture
    + DDD
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Backend Challenge API
  version: "1.0"
paths:
  /account/me:
    delete:
      description: Delete current user account
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
      security:
      - BearerAuth: []
      summary: Delete user profile
      tags:
      - user
    get:
      description: Get current user profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_moura95_backend-challenge_internal_domain_user.UserResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update current user profile information
      parameters:
      - description: Update user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_interfaces_http_handlers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_moura95_backend-challenge_internal_domain_user.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - user
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Authenticate user and return token
      parameters:
      - description: Sign in request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_moura95_backend-challenge_internal_application_usecases_auth.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
            - properties:
                data:
                  $ref: '#/definitions/internal_interfaces_http_handlers.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
      summary: Sign in user
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: Sign up request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_moura95_backend-challenge_internal_application_usecases_auth.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
            - properties:
                data:
                  $ref: '#/definitions/internal_interfaces_http_handlers.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
      summary: Sign up a new user
      tags:
      - auth
  /users:
    get:
      description: Get paginated list of users with optional search
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search by name or email
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
            - properties:
                data:
                  $ref: '#/definitions/internal_interfaces_http_handlers.ListUsersResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_moura95_backend-challenge_internal_interfaces_http_ginx.Response'
      security:
      - BearerAuth: []
      summary: List users
      tags:
      - user
securityDefinitions:
  BearerAuth:
    description: 'Type "Bearer" followed by a space and JWT token. Example: "Bearer
      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
